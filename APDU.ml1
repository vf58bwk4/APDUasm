MCSKIP MT,<>
MCSKIP + WITHS NL
MCSKIP ;WITH; NL
MCINS %.
;;
;; remove NL
MCDEF RNL WITHS () AS <+
MCSET T2 = MCLENG(%A1.)
MCSET T1 = 1
%L2.+
MCGO L0 IF T1 GR T2
MCGO L3 IF MCSUB(%A1.,%T1.,%T1.) = <
>
MCSUB(%A1.,%T1.,%T1.)+
%L3.+
MCSET T1 = T1 + 1
MCGO L2
>
;;
;; leng w/o spaces
MCDEF NSLENG WITHS () AS <+
MCSET T1 = 1
MCSET T2 = MCLENG(%A1.)
MCSET T3 = 0
%L11.MCGO L10 IF T1 GR T2
MCGO L12 IF MCSUB(%A1.,%T1.,%T1.) = < >
MCGO L12 IF MCSUB(%A1.,%T1.,%T1.) = <	>
MCGO L12 IF MCSUB(%A1.,%T1.,%T1.) = <
>
MCSET T3 = T3 + 1
%L12.+ 
MCSET T1 = T1 + 1
MCGO L11
%L10.+
%T3.>
;;
;; reverse argument
MCDEF REV WITHS () AS <+
MCSET T1 = MCLENG(%A1.)
%L11.MCGO L10 IF T1 EN 0
MCSUB(%A1.,%T1.,%T1.)+
MCSET T1 = T1 - 1
MCGO L11
%L10.+
>
;;
;; decimal -> hex
MCDEF HD0  WITH & AS 0
MCDEF HD1  WITH & AS 1
MCDEF HD2  WITH & AS 2
MCDEF HD3  WITH & AS 3
MCDEF HD4  WITH & AS 4
MCDEF HD5  WITH & AS 5
MCDEF HD6  WITH & AS 6
MCDEF HD7  WITH & AS 7
MCDEF HD8  WITH & AS 8
MCDEF HD9  WITH & AS 9
MCDEF HD10 WITH & AS A
MCDEF HD11 WITH & AS B
MCDEF HD12 WITH & AS C
MCDEF HD13 WITH & AS D
MCDEF HD14 WITH & AS E
MCDEF HD15 WITH & AS F
MCDEF D2Hr WITHS () AS <+
MCSET T1 = %A1.
%L1.+
MCGO L2 IF T1 GR 0
MCGO L0
%L2.+
MCSET T3 = T1 / 16
MCSET T2 = T1 - T3 * 16
MCSET T1 = T3
HD%T2.&+
MCGO L1
>
MCDEF D2H WITHS () AS <+
MCDEF <_> AS D2Hr(%A1.)
REV(_)>
;;
;; hex -> decimal
MCDEF HV WITH & WITH 0 AS 0
MCDEF HV WITH & WITH 1 AS 1
MCDEF HV WITH & WITH 2 AS 2
MCDEF HV WITH & WITH 3 AS 3
MCDEF HV WITH & WITH 4 AS 4
MCDEF HV WITH & WITH 5 AS 5
MCDEF HV WITH & WITH 6 AS 6
MCDEF HV WITH & WITH 7 AS 7
MCDEF HV WITH & WITH 8 AS 8
MCDEF HV WITH & WITH 9 AS 9
MCDEF HV WITH & WITH A AS 10
MCDEF HV WITH & WITH B AS 11
MCDEF HV WITH & WITH C AS 12
MCDEF HV WITH & WITH D AS 13
MCDEF HV WITH & WITH E AS 14
MCDEF HV WITH & WITH F AS 15
MCDEF H2D WITHS () AS <+
MCSET T1 = 1
MCSET T2 = MCLENG(%A1.)
MCSET T3 = 0
%L11.MCGO L10 IF T1 GR T2
MCDEF <_> AS HV&MCSUB(%A1.,%T1.,%T1.)
MCSET T3 = T3*16 + _
MCSET T1 = T1 + 1
MCGO L11
%L10.+
%T3.>
;;
;; maximum
MCDEF MAX WITHS (,) AS <+
MCGO L1 IF %A2. GE %A1.
%A1.+
MCGO L0
%L1.+
%A2.>
;;
;; field formatting
MCDEF FFC WITHS (,) AS <+
MCSET T1 = %A2.
%L11.MCGO L0 UNLESS T1 GE 1
%A1.+
MCSET T1 = T1 - 1
MCGO L11
>
;;
;; LV & TLV
MCDEF LV WITHS {} AS <+
MCDEF Val AS %B1.
MCSET T1 = NSLENG(Val)/2
MCDEF Len AS D2H(%T1.)
FFC(0,%2-MCLENG(Len).)Len<>RNL(Val)+
>
MCDEF TLV WITHS [] WITHS {} AS <%A1.LV{%B2.}>
;;
;; Nibble-Swap
MCDEF NBSWAP WITHS {} AS <+
MCSET T1 = 1
MCSET T2 = MCLENG(%A1.)
%L11.MCGO L10 IF T1 GE T2
MCSUB(%A1.,%T1+1.,%T1+1.)MCSUB(%A1.,%T1.,%T1.)+
MCSET T1 = T1 + 2
MCGO L11
%L10.MCGO L0 IF T1 GR T2
-MCSUB(%A1.,%T1.,%T1.)
>
;;
;; MCC
MCDEF MCC WITHS {} AS <NBSWAP{%A1.F}>
;;
;; PLMN
MCDEF PLMN WITHS {-} AS <+
MCGO L1 IF MCLENG(%A2.) EN 2
NBSWAP{%A1.%A2.}+
MCGO L0
%L1.+
NBSWAP{%A1.F%A2.}>
;;
;; APDU .sz comment
MCSKIP DT,/WITH/ NL
;;
;; APDU commands
;;
;; Lc
MCDEF Lc NL AS <LV{%B1.}
>
;;
;; SELECT
MCDEF OPT SEL OR SEL WITHS [] ALL NL AS <+
MCGO LT1
%L1.MCDEF P1P2 AS 0004
MCGO L3
%L2.MCDEF P1P2 AS %A1.
%L3.+
cmd: 00A4 P1P2 Lc %AT1.
rsp: .*
>
;;
;; READ BINARY 
MCDEF OPT RDB WITHS () WITHS NL OR RDB WITHS [] WITHS () WITHS NL ALL AS <+
MCGO LT1
%L1.MCDEF P1P2 AS 0000
MCGO L3
%L2.MCDEF P1P2 AS %A1.
%L3.+
cmd: 00B0 P1P2 %AT1.
rsp: .*
>
;;
;; UPDATE BINARY
MCDEF OPT UDB OR UDB WITHS [ OPT ] OR ] WITHS () ALL OR UDB WITHS () ALL NL AS <+
MCGO LT1
%L1.+
MCDEF P1P2 AS 0000
MCDEF Data AS %A1.
MCGO L4
%L2.+
MCGO L21 IF MCSUB(%WD0.,0,0) = [
MCDEF <_> AS %A2.
MCDEF P1P2 AS 0000
MCDEF Data AS _ FFC(F,%H2D(%A1.)*2-NSLENG(_).)
MCGO L4
%L21.+
MCDEF P1P2 AS %A1.
MCDEF Data AS %A2.
MCGO L4
%L3.+
MCDEF <_> AS %A3.
MCDEF P1P2 AS %A1.
MCDEF Data AS _ FFC(F,%H2D(%A2.)*2-NSLENG(_).)
%L4.+
cmd: 00D6 P1P2 Lc Data
rsp: .*
>
;;
;; READ RECORD
MCDEF OPT RDR WITHS () WITHS NL OR RDR WITHS [] WITHS () WITHS NL ALL AS <+
MCGO LT1
%L1.MCDEF P1P2 AS 0002
MCGO L3
%L2.MCDEF P1P2 AS %A1.
%L3.+
cmd: 00B2 P1P2 %AT1.
rsp: .*
>
;;
;; UPDATE RECORD
MCDEF OPT UDR OR UDR WITHS [ OPT ] OR ] WITHS () ALL OR UDR WITHS () ALL NL AS <+
MCGO LT1
%L1.+
MCDEF P1P2 AS 0002
MCDEF Data AS %A1.
MCGO L4
%L2.+
MCGO L21 IF MCSUB(%WD0.,0,0) = [
MCDEF <_> AS %A2.
MCDEF P1P2 AS 0002
MCDEF Data AS _ FFC(F,%H2D(%A1.)*2-NSLENG(_).)
MCGO L4
%L21.+
MCDEF P1P2 AS %A1.
MCDEF Data AS %A2.
MCGO L4
%L3.+
MCDEF <_> AS %A3.
MCDEF P1P2 AS %A1.
MCDEF Data AS _ FFC(F,%H2D(%A2.)*2-NSLENG(_).)
%L4.+
cmd: 00DC P1P2 Lc Data
rsp: .*
>
;;
;; VERIFY
;; TODO:
;; if leng(A1) is 4  -> PIN: ascii2hex + FFFFFFFF
;; if leng(A1) is 8  -> PUK: ascii2hex
;; if leng(A1) is 16 -> ADM: asis
MCDEF VRF WITHS [] NL AS <+
cmd: 0020 %A1. 08 %A2.
rsp: .*
>
;;
;; GET RESPONSE
MCDEF GET WITHS () WITHS NL AS <+
cmd: 00C0 0000 %A1.
rsp: .*
>
;;
;; CREATE
MCDEF CRT NL AS <+
cmd: 00E0 0000 Lc TLV[62]{%B1.}
rsp: .*
>
;;
;; DELETE
MCDEF DLT NL AS <+
cmd: 00E4 0000 Lc %A1.
rsp: .*
>
;;
;; File Control Parameters TLV objects
MCDEF fcpFD   WITHS {} AS <TLV[82]{%B1.}>
MCDEF fcpFI   WITHS {} AS <TLV[83]{%B1.}>
MCDEF fcpLCSI WITHS {} AS <TLV[8A]{%B1.}>
MCDEF fcp8B   WITHS {} AS <TLV[8B]{%B1.}>
MCDEF fcpFS   WITHS {} AS <TLV[80]{%B1.}>
MCDEF fcpSFI  WITHS {} AS <TLV[88]{%B1.}>
MCDEF fcpPI   WITHS {} AS <TLV[A5]{%B1.}>
;;
;; File IDs
MCDEF MF        AS 3F00
MCDEF efDIR     AS 2F00
MCDEF dfGSM     AS 7F20
MCDEF efSST     AS 6F38
MCDEF efUST     AS 6F38
MCDEF efEST     AS 6F56
MCDEF efPNN     AS 6FC5
MCDEF efOPL     AS 6FC6
MCDEF efMBDN    AS 6FC7
MCDEF efMBI     AS 6FC9
MCDEF efMWIS    AS 6FCA
MCDEF efCFIS    AS 6FCB
MCDEF efSPDI    AS 6FCD
MCDEF efEHPLMN  AS 6FD9
MCDEF efEHPLMNI AS 6FDB
;; translate TAB to SPACE
MCSET S16 = 9
MCSET S17 = 32
