MCSKIP ; WITH ; NL
MCINS %.
MCSKIP MT,<>
MCSKIP + WITHS NL
;;
;; FOR P1 = 1 [STEP 2] TO 10
;; body
;; REPEAT
MCDEF MCFOR = OPT STEP N1 OR N1 TO ALL NL REPEAT
AS <+
MCSET %A1. = %A2.
MCSET T3 = 1
MCGO L1 IF T1 EN 4
MCSET T3 = %A3.
MCGO L1 IF T3 GR 0
%L2.MCGO L0 IF %AT1-1. GR %A1.
%AT1.MCSET %A1. = %A1. + T3
MCGO L2
%L1.MCGO L0 IF %A1. GR %AT1-1.
%AT1.MCSET %A1. = %A1. + T3
MCGO L1
>
;;
;; Returns a string containing a repeating character string of the length specified
MCDEF STRING WITHS (,) AS <+
MCDEF <_> AS %A2.
MCSET T1 = %A1.
%L1.MCGO L0 UNLESS T1 GE 1
_+
MCSET T1 = T1 - 1
MCGO L1
>
;; repeat A2 A1 times replacing P1 in A2 to value 1 .. A1
MCDEF DOP1 TIMES NL AS <+
MCSET P1 = 1
%L1.MCGO L0 IF P1 GR %A1.
%A2.+
MCSET P1 = P1 + 1
MCGO L1
>
;;
;; clear any format
MCDEF CLRFMT WITHS () AS <+
MCDEF <_> AS %A1.
MCSET T2 = MCLENG(_)
MCSET T1 = 1
%L1.MCGO L0 IF T1 GR T2
MCDEF <$> AS MCSUB(_,%T1.,%T1.)
MCGO L2 IF $ = < >
MCGO L2 IF $ = <	>
MCGO L2 IF $ = <
>
MCGO L2 IF $ = <->
$+
%L2.MCSET T1 = T1 + 1
MCGO L1
>
;;
;; length w/o spaces
MCDEF NSLENG WITHS () AS <+
MCDEF <_> AS %A1.
MCSET T3 = 0
MCSET T2 = MCLENG(_)
MCSET T1 = 1
%L1.MCGO L10 IF T1 GR T2
MCDEF <$> AS MCSUB(_,%T1.,%T1.)
MCGO L2 IF $ = < >
MCGO L2 IF $ = <	>
MCGO L2 IF $ = <
>
MCSET T3 = T3 + 1
%L2.MCSET T1 = T1 + 1
MCGO L1
%L10.+
%T3.>
;; Dec -> Dec table
MCDEF TBDH WITH ^ WITH 0  AS 0
MCDEF TBDH WITH ^ WITH 1  AS 1
MCDEF TBDH WITH ^ WITH 2  AS 2
MCDEF TBDH WITH ^ WITH 3  AS 3
MCDEF TBDH WITH ^ WITH 4  AS 4
MCDEF TBDH WITH ^ WITH 5  AS 5
MCDEF TBDH WITH ^ WITH 6  AS 6
MCDEF TBDH WITH ^ WITH 7  AS 7
MCDEF TBDH WITH ^ WITH 8  AS 8
MCDEF TBDH WITH ^ WITH 9  AS 9
;; Dec -> Hex table
MCDEF TBDH WITH ^ WITH 10 AS A
MCDEF TBDH WITH ^ WITH 11 AS B
MCDEF TBDH WITH ^ WITH 12 AS C
MCDEF TBDH WITH ^ WITH 13 AS D
MCDEF TBDH WITH ^ WITH 14 AS E
MCDEF TBDH WITH ^ WITH 15 AS F
;; Hex -> Dec table
MCDEF TBDH WITH ^ WITH A AS 10
MCDEF TBDH WITH ^ WITH B AS 11
MCDEF TBDH WITH ^ WITH C AS 12
MCDEF TBDH WITH ^ WITH D AS 13
MCDEF TBDH WITH ^ WITH E AS 14
MCDEF TBDH WITH ^ WITH F AS 15
;; DTOH recursive
MCDEF DTOH WITHS () AS <+
MCSET T1 = %A1.
MCGO L2 IF T1 GR 0
MCGO L0
%L2.+
MCSET T3 = T1 / 16
DTOH(%T3.)+
MCDEF <_> AS TBDH^%T1-T3*16.
_>
;; HTOD
MCDEF HTOD WITHS () AS <+
MCDEF <_> AS %A1.
MCSET T1 = 1
MCSET T2 = MCLENG(_)
MCSET T3 = 0
%L1.MCGO L10 IF T1 GR T2
MCDEF <$> AS TBDH^MCSUB(_,%T1.,%T1.)
MCSET T3 = T3*16 + $
MCSET T1 = T1 + 1
MCGO L1
%L10.+
%T3.>
;;
;; L2V, LV & TLV
MCDEF @ WITH @ WITH {} AS <+
MCDEF VAL AS CLRFMT(%A1.)
MCDEF LEN AS DTOH(%MCLENG(VAL)/2.)
STRING(%4-MCLENG(LEN).,0)LEN<>VAL+
>
MCDEF @ WITH {} AS <+
MCDEF VAL AS CLRFMT(%A1.)
MCDEF LEN AS DTOH(%MCLENG(VAL)/2.)
STRING(%2-MCLENG(LEN).,0)LEN<>VAL+
>
MCDEF @ WITH [] WITH {} AS <%A1.@{%A2.}>
;;
;; Nibble-Swap
MCDEF NBSWAP WITHS () AS <+
MCFOR P1 = 1 STEP 2 TO %MCLENG(%A1.).
MCSUB(%A1.,%P1+1.,%P1+1.)MCSUB(%A1.,%P1.,%P1.)+
REPEAT
;; MCSET T1 = 1
;; MCSET T2 = MCLENG(%A1.)
;; %L11.MCGO L10 IF T1 GE T2
;; MCSUB(%A1.,%T1+1.,%T1+1.)MCSUB(%A1.,%T1.,%T1.)+
;; MCSET T1 = T1 + 2
;; MCGO L11
;; %L10.MCGO L0 IF T1 GR T2
;; -MCSUB(%A1.,%T1.,%T1.)
>
;;
;; MCC
MCDEF MCC WITHS {} AS <NBSWAP(%A1.F)>
;;
;; PLMN
MCDEF PLMN WITHS {-} AS <+
MCGO L1 IF MCLENG(%A2.) EN 2
NBSWAP(%A1.%A2.)+
MCGO L0
%L1.+
NBSWAP(%A1.F%A2.)>
;;
;; APDU .sz comment
MCSKIP DT,/WITH/ NL
;;
;; APDU commands
;;
;; Lc
MCDEF Lc NL AS <@{%A1.}
>
;;
;; SELECT
MCDEF OPT SEL OR SEL WITHS [] ALL NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
MCGO LT1
%L1.MCDEF P1P2 AS 0004
MCGO L3
%L2.MCDEF P1P2 AS %A1.
%L3.+
cmd: 00A4 P1P2 @{%AT1.}
rsp: .*
>
;;
;; READ BINARY 
MCDEF OPT RDB WITHS () WITHS NL OR RDB WITHS [] WITHS () WITHS NL ALL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
MCGO LT1
%L1.MCDEF P1P2 AS 0000
MCGO L3
%L2.MCDEF P1P2 AS %A1.
%L3.+
cmd: 00B0 P1P2 %AT1.
rsp: .*
>
;;
;; UPDATE BINARY
MCDEF OPT UDB OR UDB WITHS [ OPT ] OR ] WITHS () ALL OR UDB WITHS () ALL NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
MCGO LT1
%L1.+
MCDEF P1P2 AS 0000
MCDEF Data AS %A1.
MCGO L4
%L2.+
MCGO L21 IF MCSUB(%WD0.,0,0) = [
MCDEF <_> AS %A2.
MCDEF P1P2 AS 0000
MCDEF Data AS _ STRING(%HTOD(%A1.)*2-NSLENG(_).,F)
MCGO L4
%L21.+
MCDEF P1P2 AS %A1.
MCDEF Data AS %A2.
MCGO L4
%L3.+
MCDEF <_> AS %A3.
MCDEF P1P2 AS %A1.
MCDEF Data AS _ STRING(%HTOD(%A2.)*2-NSLENG(_).,F)
%L4.+
cmd: 00D6 P1P2 @{ Data}
rsp: .*
>
;;
;; READ RECORD
MCDEF OPT RDR WITHS () WITHS NL OR RDR WITHS [] WITHS () WITHS NL ALL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
MCGO LT1
%L1.MCDEF P1P2 AS 0002
MCGO L3
%L2.MCDEF P1P2 AS %A1.
%L3.+
cmd: 00B2 P1P2 %AT1.
rsp: .*
>
;;
;; UPDATE RECORD
MCDEF OPT UDR OR UDR WITHS [ OPT ] OR ] WITHS () ALL OR UDR WITHS () ALL NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
MCGO LT1
%L1.+
MCDEF P1P2 AS 0002
MCDEF Data AS %A1.
MCGO L4
%L2.+
MCGO L21 IF MCSUB(%WD0.,0,0) = [
MCDEF <_> AS %A2.
MCDEF P1P2 AS 0002
MCDEF Data AS _ STRING(%HTOD(%A1.)*2-NSLENG(_).,F)
MCGO L4
%L21.+
MCDEF P1P2 AS %A1.
MCDEF Data AS %A2.
MCGO L4
%L3.+
MCDEF <_> AS %A3.
MCDEF P1P2 AS %A1.
MCDEF Data AS _ STRING(%HTOD(%A2.)*2-NSLENG(_).,F)
%L4.+
cmd: 00DC P1P2 @{ Data}
rsp: .*
>
;;
;; VERIFY
;; TODO:
;; if leng(A1) is 4  -> PIN: ascii2hex + FFFFFFFF
;; if leng(A1) is 8  -> PUK: ascii2hex
;; if leng(A1) is 16 -> ADM: asis
MCDEF VRF WITHS [] NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
cmd: 0020 %A1. 08 %A2.
rsp: .*
>
;;
;; GET RESPONSE
MCDEF GET WITHS () WITHS NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
cmd: 00C0 0000 %A1.
rsp: .*
>
;;
;; CREATE
MCDEF CRT NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
cmd: 00E0 0000 @{@[62]{%A1.}}
rsp: .*
>
;;
;; DELETE
MCDEF DLT NL AS <+
</></> %WD0.DOP1 %T1. TIMES %WBP1.%WDP1.
cmd: 00E4 0000 @{%A1.}
rsp: .*
>
;;
;; File Control Parameters TLV objects
MCDEF fcpFD   WITHS {} AS <@[82]{%A1.}>
MCDEF fcpFI   WITHS {} AS <@[83]{%A1.}>
MCDEF fcpLCSI WITHS {} AS <@[8A]{%A1.}>
MCDEF fcp8B   WITHS {} AS <@[8B]{%A1.}>
MCDEF fcpFS   WITHS {} AS <@[80]{%A1.}>
MCDEF fcpSFI  WITHS {} AS <@[88]{%A1.}>
MCDEF fcpPI   WITHS {} AS <@[A5]{%A1.}>
;;
;; File IDs
MCDEF MF        AS 3F00
MCDEF efDIR     AS 2F00
MCDEF dfGSM     AS 7F20
MCDEF efSST     AS 6F38
MCDEF efUST     AS 6F38
MCDEF efEST     AS 6F56
MCDEF efPNN     AS 6FC5
MCDEF efOPL     AS 6FC6
MCDEF efMBDN    AS 6FC7
MCDEF efMBI     AS 6FC9
MCDEF efMWIS    AS 6FCA
MCDEF efCFIS    AS 6FCB
MCDEF efSPDI    AS 6FCD
MCDEF efEHPLMN  AS 6FD9
MCDEF efEHPLMNI AS 6FDB
;; translate TAB to SPACE
MCSET S16 = 9
MCSET S17 = 32
;; print usage
MCSET S18=2
;; execute next file
MCSET S10=2

